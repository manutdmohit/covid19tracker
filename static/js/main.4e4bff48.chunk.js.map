{"version":3,"sources":["components/CovidTracker.js","App.js","reportWebVitals.js","index.js"],"names":["CovidTracker","useState","state","setState","covidUpdate","a","fetch","res","console","log","json","data","useEffect","className","cases","deaths","recovered","todayCases","todayDeaths","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+PAuDeA,EApDM,WAAO,IAAD,EACCC,mBAAS,IADV,mBAClBC,EADkB,KACXC,EADW,KAEnBC,EAAW,uCAAG,8BAAAC,EAAA,sEACAC,MAAM,gDADN,cACZC,EADY,OAElBC,QAAQC,IAAIF,GAFM,SAGCA,EAAIG,OAHL,OAGZC,EAHY,OAIlBH,QAAQC,IAAIE,GACZR,EAASQ,GALS,2CAAH,qDAUjB,OAHAC,qBAAU,WACRR,MACC,IAED,qCACE,oBAAIS,UAAU,UAAd,6BACA,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,OAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uCACA,gDAGF,sBAAKA,UAAU,QAAf,UACE,6CACA,6BAAKX,EAAMY,WAGb,sBAAKD,UAAU,QAAf,UACE,8CACA,6BAAKX,EAAMa,YAGb,sBAAKF,UAAU,QAAf,UACE,iDACA,6BAAKX,EAAMc,eAGb,sBAAKH,UAAU,QAAf,UACE,2CACA,6BAAKX,EAAMe,gBAGb,sBAAKJ,UAAU,QAAf,UACE,gDACA,6BAAKX,EAAMgB,0BCpCRC,EARH,WACV,OACE,mCACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4e4bff48.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./CovidTracker.css\";\r\n\r\nconst CovidTracker = () => {\r\n  const [state, setState] = useState(\"\");\r\n  const covidUpdate = async () => {\r\n    const res = await fetch(\"https://corona.lmao.ninja/v2/countries/nepal\");\r\n    console.log(res);\r\n    const data = await res.json();\r\n    console.log(data);\r\n    setState(data);\r\n  };\r\n  useEffect(() => {\r\n    covidUpdate();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <h1 className=\"heading\">Covid-19 UPDATE</h1>\r\n      <div className=\"container\">\r\n        <div className=\"card\">\r\n          <div className=\"card1\">\r\n            <h2>Nepal</h2>\r\n            <h2>Live Update</h2>\r\n          </div>\r\n\r\n          <div className=\"card2\">\r\n            <h3>Total Cases</h3>\r\n            <h1>{state.cases}</h1>\r\n          </div>\r\n\r\n          <div className=\"card3\">\r\n            <h3>Total Deaths</h3>\r\n            <h1>{state.deaths}</h1>\r\n          </div>\r\n\r\n          <div className=\"card4\">\r\n            <h3>Total Recovered</h3>\r\n            <h1>{state.recovered}</h1>\r\n          </div>\r\n\r\n          <div className=\"card5\">\r\n            <h3>New Cases</h3>\r\n            <h1>{state.todayCases}</h1>\r\n          </div>\r\n\r\n          <div className=\"card6\">\r\n            <h3>Today's Deaths</h3>\r\n            <h1>{state.todayDeaths}</h1>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CovidTracker;\r\n","import React from \"react\";\nimport CovidTracker from \"./components/CovidTracker\";\n\nconst App = () => {\n  return (\n    <>\n      <CovidTracker />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}